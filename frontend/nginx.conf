# Define custom log formats
log_format main_json escape=json '{'
  '"timestamp": "$time_iso8601",'
  '"remote_addr": "$remote_addr",'
  '"remote_user": "$remote_user",'
  '"request": "$request",'
  '"status": "$status",'
  '"body_bytes_sent": "$body_bytes_sent",'
  '"http_referer": "$http_referer",'
  '"http_user_agent": "$http_user_agent",'
  '"http_x_forwarded_for": "$http_x_forwarded_for",'
  '"http_x_real_ip": "$http_x_real_ip",'
  '"request_time": "$request_time",'
  '"upstream_response_time": "$upstream_response_time",'
  '"upstream_addr": "$upstream_addr",'
  '"request_id": "$request_id",'
  '"connection": "$connection",'
  '"connection_requests": "$connection_requests",'
  '"server_name": "$server_name",'
  '"scheme": "$scheme"'
'}';

# Simplified format for development
log_format main_simple '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '"$http_x_forwarded_for" $request_time ms [ID: $request_id]';

server {
  listen 80;
  server_name _;
  
  # Configure access and error logs
  access_log /var/log/nginx/access.log main_json;
  error_log /var/log/nginx/error.log warn;
  
  # Root directory
  root /usr/share/nginx/html;
  index index.html;

  # MIME types for PWA files
  types {
    application/manifest+json webmanifest;
    application/javascript js;
    text/css css;
    text/html html;
    image/png png;
    image/jpeg jpg;
    image/svg+xml svg;
  }

  # Security headers
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Request-ID $request_id always;

  # Service Worker - must not be cached
  location ~ ^/(sw\.js|workbox-.*\.js|registerSW\.js)$ {
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header Pragma "no-cache";
    add_header Expires "0";
    add_header Service-Worker-Allowed "/";
    add_header X-Request-ID $request_id always;
    try_files $uri =404;
  }

  # Manifest files - short cache
  location ~ ^/(manifest\.webmanifest|manifest\.json)$ {
    add_header Content-Type "application/manifest+json";
    add_header Cache-Control "public, max-age=3600";
    add_header Access-Control-Allow-Origin "*";
    add_header X-Request-ID $request_id always;
    try_files $uri =404;
  }

  # Static assets - long cache
  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header X-Request-ID $request_id always;
    try_files $uri =404;
  }

  # SPA routing - serve index.html for all routes
  location / {
    add_header X-Request-ID $request_id always;
    try_files $uri $uri/ /index.html;
  }

  # API proxy to backend with enhanced headers
  location /api/ {
    proxy_pass http://backend:5000/api/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Request-ID $request_id;
    proxy_set_header X-Correlation-ID $request_id;
    
    # Enhanced proxy settings for debugging
    proxy_set_header Connection "";
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_read_timeout 60s;
    proxy_connect_timeout 10s;
    proxy_send_timeout 60s;
    
    # Log API requests separately
    access_log /var/log/nginx/api_access.log main_json;
  }

  # Health check endpoint
  location /health {
    add_header Content-Type application/json;
    add_header X-Request-ID $request_id always;
    return 200 '{"status":"ok","service":"nginx-frontend","timestamp":"$time_iso8601","request_id":"$request_id"}';
  }
}
